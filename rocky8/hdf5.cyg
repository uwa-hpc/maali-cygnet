##############################################################################
# maali config file for hdf5
##############################################################################
read -r -d '' MAALI_MODULE_WHATIS << EOF

HDF5 is a data model, library, and file format for storing and managing
data. It supports an unlimited variety of datatypes, and is designed 
for flexible and efficient I/O and for high volume and complex data. 
HDF5 is portable and is extensible, allowing applications to evolve in 
their use of HDF5.

For more information see https://www.hdfgroup.org/

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_GCC_COMPILERS"

# need to sup the major/minor version
MAALI_TOOL_MAJOR_MINOR_VERSION=`echo $MAALI_TOOL_VERSION | cut -d '.' -f 1,2 --output-delimiter='_'`
MAALI_TOOL_MAJOR_MINOR_PATCH_VERSION=`echo $MAALI_TOOL_VERSION | cut -d "." -f 1,2,3 --output-delimiter='_'`

# URL to download the source code from
MAALI_URL="https://support.hdfgroup.org/releases/"$MAALI_TOOL_NAME"/v"$MAALI_TOOL_MAJOR_MINOR_VERSION"/v"$MAALI_TOOL_MAJOR_MINOR_PATCH_VERSION"/downloads/"$MAALI_TOOL_NAME"-"$MAALI_TOOL_VERSION".tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-"$MAALI_TOOL_NAME"_"$MAALI_TOOL_VERSION".tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# tool pre-requisites
MAALI_TOOL_PREREQ="zlib/1.3.1 szip/2.1.1"

# add additional configure options
if [[ ${MAALI_TOOL_VERSION} == "1.6.10" ]]; then
  MAALI_TOOL_CONFIGURE='--enable-production --enable-cxx '
  MAALI_TOOL_CONFIGURE+=' --with-zlib=$MAALI_ZLIB_HOME '
else
  # cmake build
  MAALI_TOOL_BUILD_PREREQ="cmake/3.31.6"
  MAALI_CMAKE_TOOL=1
  # this is the default configuration for new versions!
  MAALI_TOOL_CONFIGURE='-DCMAKE_BUILD_TYPE=Release '
  MAALI_TOOL_CONFIGURE+='-DBUILD_SHARED_LIBS:BOOL=ON '
  MAALI_TOOL_CONFIGURE+='-DHDF5_BUILD_FORTRAN:BOOL=ON '
  MAALI_TOOL_CONFIGURE+='-DHDF5_BUILD_CPP_LIB:BOOL=ON '
  #MAALI_TOOL_CONFIGURE+='-DSZIP_DIR:PATH=$MAALI_SZIP_HOME '
  #MAALI_TOOL_CONFIGURE+='-DZLIB_DIR:PATH=$MAALI_ZLIB_HOME '
  MAALI_TOOL_CONFIGURE+='-DHDF5_ENABLE_Z_LIB_SUPPORT:BOOL=ON '
  #MAALI_TOOL_CONFIGURE+='-DHDF5_ENABLE_SZIP_ENCODING:BOOL=ON '
  #MAALI_TOOL_CONFIGURE+='-DHDF5_ENABLE_SZIP_SUPPORT:BOOL=ON '
  #MAALI_TOOL_CONFIGURE+='-DSZIP_LIBRARY_RELEASE:PATH=$MAALI_SZIP_HOME/lib/libsz.so '
  MAALI_TOOL_CONFIGURE+='-DZLIB_LIBRARY_RELEASE:PATH=$MAALI_ZLIB_HOME/lib/libz.so '  
  MAALI_TOOL_CONFIGURE+='-DZLIB_INCLUDE_DIR:PATH=$MAALI_ZLIB_HOME/include '
  #MAALI_TOOL_CONFIGURE+='-DSZIP_INCLUDE_DIR:PATH=$MAALI_SZIP_HOME/include '
#  large 64 bit files
#MAALI_TOOL_CONFIGURE+='=DHDF5_ENABLE_LARGE_FILES '
# parallel requires MPI
#MAALI_TOOL_CONFIGURE+='-DHDF5_ENABLE_PARALLEL '
# for auto-building module files
fi
MAALI_MODULE_SET_HDF5_DIR='$MAALI_APP_HOME'
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_CPATH=1
MAALI_MODULE_SET_FPATH=1
MAALI_MODULE_SET_FCPATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_SET_PKG_CONFIG_PATH=1

##############################################################################
