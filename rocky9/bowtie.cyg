##############################################################################
# maali cygnet file for bowtie
##############################################################################

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_GCC_COMPILERS"

# URL to download the source code from
MAALI_URL="http://sourceforge.net/projects/bowtie-bio/files/bowtie/$MAALI_TOOL_VERSION/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION-src.zip/download"
#0.12.9

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION-src.zip"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION-src"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="bio-apps"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_SET_BOWTIE_INDEXES='$MAALI_INSTALL_DIR/indexes'


##############################################################################

function maali_build {
  cd "$MAALI_TOOL_BUILD_DIR"

  if [ "$MAALI_COMPILER_NAME" == "intel" ]; then
    sed -i -e 's!gcc!icc!g' Makefile
    sed -i -e 's!g++!icpc!g' Makefile
    maali_run "patch -p0 < $MAALI_FILES_PATH/$MAALI_TOOL_NAME.001.patch"
  fi

  maali_run "make"
  maali_run "mkdir -p $MAALI_INSTALL_DIR/bin"
  maali_run "mkdir -p $MAALI_INSTALL_DIR/share/man"
  maali_run "cp -r $MAALI_TOOL_BUILD_DIR/genomes $MAALI_INSTALL_DIR"
  maali_run "cp -r $MAALI_TOOL_BUILD_DIR/reads $MAALI_INSTALL_DIR"
  maali_run "cp -r $MAALI_TOOL_BUILD_DIR/indexes $MAALI_INSTALL_DIR"  
  maali_run "mv bowtie bowtie-* $MAALI_INSTALL_DIR/bin"

}

##############################################################################
